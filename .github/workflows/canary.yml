name: Canary Workflow

on:
  schedule:
    - cron: "*/5 * * * *"
  workflow_dispatch:

jobs:
  canary:
    environment: canary
    runs-on: ubuntu-latest
    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      MCPAC_API_KEY: ${{ secrets.MCPAC_API_KEY }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install uv
          uv pip install -e . --system
          uv version

      - name: Deploy
        id: deploy
        run: |
          python canary/deploy_app.py | tee full_deploy.log | tail -n 1 > deploy_output.json
        continue-on-error: false

      - name: Test app
        id: test
        run: |
          APP_URL=$(jq -r '.app_url' deploy_output.json)
          python canary/test_app.py "$APP_URL" | tee full_test.log | tail -n 1 > test_output.json

      - name: Log results
        run: |
          APP_ID=$(jq -r '.app_id // empty' deploy_output.json)
          STATUS=$(jq -r '.success // "unknown"' test_output.json)
          DEPLOY_LATENCY=$(jq -r '.latency_s // 0' deploy_output.json)
          TEST_LATENCY=$(jq -r '.latency_s // 0' test_output.json)
          TOTAL_LATENCY=$(echo "$DEPLOY_LATENCY + $TEST_LATENCY" | bc)
          DEPLOY_STDOUT=$(jq -r '.output // ""' deploy_output.json)
          DEPLOY_STDERR=$(jq -r '.stderr // ""' deploy_output.json)
          TEST_STDOUT=$(jq -r '.stdout // ""' test_output.json)
          TEST_STDERR=$(jq -r '.stderr // ""' test_output.json)

          # Log summary to console
          echo "ðŸ“Š Logging results for app_id=$APP_ID (status=$STATUS)"
          echo "  Deploy latency: ${DEPLOY_LATENCY}s"
          echo "  Test latency:   ${TEST_LATENCY}s"
          echo "  Total latency:  ${TOTAL_LATENCY}s"
      
          # Run the logger
          python canary/log_result.py \
            "$STATUS" \
            "$APP_ID" \
            "$TOTAL_LATENCY" \
            "$DEPLOY_LATENCY" \
            "$TEST_LATENCY" \
            "$DEPLOY_STDOUT" \
            "$DEPLOY_STDERR" \
            "$TEST_STDOUT" \
            "$TEST_STDERR"

      - name: Cleanup
        if: always()
        run: |
          APP_ID=$(jq -r '.app_id // empty' deploy_output.json)
          if [ -n "$APP_ID" ]; then
            python canary/delete_app.py "$APP_ID" | tee full_delete.log | tail -n 1 > delete_output.json
